<map>    
    <libraries>osgEarthSplat</libraries>
    
    <xi:include href="readymap_elevation.xml"/>
    <xi:include href="../data/land_cover_dictionary.xml"/>
    <xi:include href="splat_imagery.xml"/>
    <xi:include href="trees.xml"/>
    <xi:include href="grass.xml"/>

    <CompositeLandCover>
        <layers>
            <LandCover name="ESA Land Cover" max_data_level="17">
                <xi:include href="H:/data/esa/land_cover_ESA_GLOBCOVER.xml"/>
                <GDALImage>
                    <url>H:/data/esa/GLOBCOVER_L4_200901_200912_V2.3_Ant_tiled.tif</url>
                    <profile>global-geodetic</profile>
                </GDALImage>
            </LandCover>

            <LandCover name="NLCD Land Cover" max_data_level="17">
                <xi:include href="H:/data/nlcd/land_cover_NLCD.xml"/>
                <GDALImage>
                    <url>H:/data/nlcd/nlcd_2011_landcover_2011_edition_2014_03_31.tif</url>
                </GDALImage>
            </LandCover>

            <LandCover name="VRICON Ft Hood Land Cover" max_data_level="18">
                <xi:include href="H:/data/vricon/land_cover_vricon.xml"/>
                <GDALImage>
                    <url>H:/data/vricon/classification_wgs84.tif</url>
                </GDALImage>
            </LandCover>
        </layers>
    </CompositeLandCover>

    <DebugImage>
        <shader>
            <![CDATA[
            #version 330
            #pragma vp_entryPoint colorize
            #pragma vp_location fragment_coloring
            #pragma import_defines(OE_LANDCOVER_TEX, OE_LANDCOVER_TEX_MATRIX)
            
            uniform sampler2D OE_LANDCOVER_TEX;
            uniform mat4 OE_LANDCOVER_TEX_MATRIX;
            vec4 oe_layer_tilec;
            void colorize(inout vec4 color) {
                int c = int(texture(OE_LANDCOVER_TEX, (OE_LANDCOVER_TEX_MATRIX*oe_layer_tilec).st).r);
                ivec3 v;
                if      (c == 0)  v.rgb = ivec3(0, 0, 0);      // forest
                else if (c == 1)  v.rgb = ivec3(0, 64, 0);      // forest
                else if (c == 2)  v.rgb = ivec3(0, 127, 0);     // cropland
                else if (c == 3)  v.rgb = ivec3(0, 192, 0);     // grassland
                else if (c == 4)  v.rgb = ivec3(192, 192, 128); // savanna
                else if (c == 5)  v.rgb = ivec3(40, 50, 70);    // swamp
                else if (c == 6)  v.rgb = ivec3(192, 128, 64);  // desert
                else if (c == 7)  v.rgb = ivec3(100, 100, 100); // rock
                else if (c == 8)  v.rgb = ivec3(64, 64, 128);   // water
                else if (c == 9)  v.rgb = ivec3(250, 250, 250); // tundra
                else if (c == 10) v.rgb = ivec3(128, 128, 128); // urban
                else if (c == 11) v.rgb = ivec3(48, 48, 48);    // asphalt
                else v.rgb = ivec3(255,0,0);
                vec4 a = vec4(float(v.r)/255.0, float(v.g)/255.0, float(v.b)/255.0, 1.0);
                color = mix(color, a, 0.75);
            }
          ]]>
        </shader>
    </DebugImage>
    
    <xi:include href="viewpoints.xml"/>
</map>
